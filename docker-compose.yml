version: '3.9'

services:
  auth-server:
    build: ./apps/auth-server
    ports:
      - "4000:4000"
    environment:
      - 'VAULT_ADDR=http://vault:8200'
      - 'VAULT_TOKEN=dev-token'
    depends_on:
      - vault
    networks:
      - app
      - monitoring

#  main-server:
#    build: ./apps/main-server
#    ports:
#      - "8000:8000"
#    depends_on:
#      - auth-server
#    networks:
#      - app
#      - monitoring

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infra/monitoring/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./infra/monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    ports:
      - "9093:9093"
    networks:
      - monitoring

  vault:
    image: hashicorp/vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: dev-token
    cap_add:
      - IPC_LOCK
    networks:
      - app
      - vault

  vault-init:
    build: ./infra/vault-init
    depends_on:
      - vault
    restart: "no"
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: dev-token
    networks:
      - vault

  waf:
    image: owasp/modsecurity-crs:nginx
    container_name: waf
    ports:
      - "80:80"
    volumes:
      - ./infra/waf/nginx/default.conf:/etc/nginx/templates/conf.d/default.conf.template:ro
    depends_on:
      - auth-server
    networks:
      - app

volumes:
  prometheus_data:
  grafana_data:

networks:
  app:
    driver: bridge
  monitoring:
    driver: bridge
  vault:
    driver: bridge
