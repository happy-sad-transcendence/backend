version: '3.9'

services:
  auth-server:
    build: ./auth-server
    ports:
      - "4000:4000"
    environment:
      - 'VAULT_ADDR=http://vault:8200'
      - 'VAULT_TOKEN=dev-token'
    depends_on:
      - vault
    networks:
      - app
      - monitoring

#  main-server:
#    build: ./main-server
#    ports:
#      - "8000:8000"
#    depends_on:
#      - auth-server
#      - log-server
#    networks:
#      - app
#      - elk
#      - monitoring

  elasticsearch:
    image: elasticsearch:8.18.0
    environment:
      - node.name=es01
      - cluster.name=transcendence-es
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      # 보안 활성화 시 admin 계정 설정
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=ChangeMe123
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk

  logstash:
    image: logstash:8.18.0
    depends_on:
      - elasticsearch
    volumes:
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"    # Beats input
      - "5000:5000"    # syslog, tcp input 등
    networks:
      - elk

  kibana:
    image: kibana:8.18.0
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_SERVICE_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL2tpYmFuYS10b2tlbjpIYU1vejFUclJ4dWFPaXhoUjlxWUVB
    ports:
      - "5601:5601"
    networks:
      - elk

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - /Users/heechoi/Documents/happy-sad-transcendence/backend/monitoring/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks:
      - monitoring

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    ports:
      - "9093:9093"
    networks:
      - monitoring

  vault:
    image: hashicorp/vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: dev-token
    cap_add:
      - IPC_LOCK
    networks:
      - app
      - vault

  vault-init:
    build: ./vault-init
    depends_on:
      - vault
    restart: "no"
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: dev-token
    networks:
      - vault

  waf:
    image: owasp/modsecurity-crs:nginx
    container_name: waf
    ports:
      - "80:80"
    volumes:
      - ./waf/nginx/default.conf:/etc/nginx/templates/conf.d/default.conf.template:ro
    depends_on:
      - auth-server
    networks:
      - app


volumes:
  prometheus_data:
  grafana_data:

networks:
  app:
    driver: bridge
  elk:
    driver: bridge
  monitoring:
    driver: bridge
  vault:
    driver: bridge